// ********RoostGPT********
// Test generated by RoostGPT for test ReactTest using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import React from 'react';
import { render, fireEvent, waitFor } from '@testing-library/react';
import '@testing-library/jest-dom';
import Generate from '../../src/Generate.jsx';

describe('Generate Component', () => {
  test('renders without crashing', () => {
    const { getByPlaceholderText } = render(<Generate />);
    expect(getByPlaceholderText(/Enter Name/i)).toBeInTheDocument();
  });
  
  test('input fields and button are present', () => {
    const { getByPlaceholderText, getByText, getByRole } = render(<Generate />);
    expect(getByPlaceholderText(/Enter Name/i)).toBeInTheDocument();
    expect(getByPlaceholderText(/Enter Day/i)).toBeInTheDocument();
    expect(getByText(/Generate Link/i)).toBeInTheDocument();
  });
  
  test('updates state on input change', () => {
    const { getByPlaceholderText } = render(<Generate />);
    const nameInput = getByPlaceholderText(/Enter Name/i);
    fireEvent.change(nameInput, { target: { value: 'John' } });
    expect(nameInput.value).toBe('John');
  });
  
  test('generates correct link on button click', async () => {
    const { getByPlaceholderText, getByText, getByRole } = render(<Generate />);
    const nameInput = getByPlaceholderText(/Enter Name/i);
    const dayInput = getByPlaceholderText(/Enter Day/i);
    const monthSelect = getByRole('combobox');
    const generateButton = getByText(/Generate Link/i);

    fireEvent.change(nameInput, { target: { value: 'John' } });
    fireEvent.change(dayInput, { target: { value: '20' } });
    fireEvent.change(monthSelect, { target: { value: '3' } });
    fireEvent.click(generateButton);
    
    await waitFor(() => {
      const linkParagraph = getByText(
        'https://birthday-wisher.netlify.app/birthday/John/20/3',
        { exact: false }
      );
      expect(linkParagraph).toBeInTheDocument();
    });
  });
});

