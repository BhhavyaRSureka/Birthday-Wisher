// ********RoostGPT********
// Test generated by RoostGPT for test ReactTest using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
// Import necessary testing libraries and utilities
import React from 'react';
import { render } from '@testing-library/react';
import { MemoryRouter, Route } from 'react-router-dom';
import App from '../../src/App.js'; // Correct relative path from __tests__/src to src/App.js

// Set up the test suite using 'describe'
describe('App Routing', () => {
  // Before each test, wrap the App component in a MemoryRouter to simulate the routing context
  beforeEach(() => {
    render(
      <MemoryRouter>
        <App />
      </MemoryRouter>
    );
  });

  // Test case 1: Default path should render the Birthday component
  test('renders the Birthday component on the root path', () => {
    // We use a test route to check if the Birthday component is rendered
    const { getByTestId } = render(
      <MemoryRouter initialEntries={['/']}>
        <Route path='/' component={() => <div data-testid="birthday-component" />} />
      </MemoryRouter>
    );

    expect(getByTestId('birthday-component')).toBeInTheDocument();
  });

  // Test case 2: Dynamic path should render the RouterBirthday component
  test('renders the RouterBirthday component on the dynamic path', () => {
    const { getByTestId } = render(
      <MemoryRouter initialEntries={['/birthday/john/1/1']}>
        <Route path='/birthday/:name?/:day?/:month?' component={() => <div data-testid="router-birthday-component" />} />
      </MemoryRouter>
    );

    expect(getByTestId('router-birthday-component')).toBeInTheDocument();
  });

  // Test case 3: Generate path should render the Generate component
  test('renders the Generate component on the generate path', () => {
    const { getByTestId } = render(
      <MemoryRouter initialEntries={['/generate']}>
        <Route path='/generate' component={() => <div data-testid="generate-component" />} />
      </MemoryRouter>
    );

    expect(getByTestId('generate-component')).toBeInTheDocument();
  });
});

