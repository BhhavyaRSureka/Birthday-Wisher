// ********RoostGPT********
// Test generated by RoostGPT for test ReactTesting using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
// Imports for React and testing utilities
import React from 'react';
import { render, cleanup, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';

// Relative import for the ExampleComponent
import ExampleComponent from '../ExampleComponent.js'; // Assuming ExampleComponent is one level up from __tests__/src

// Test suite for ExampleComponent
describe('ExampleComponent Tests', () => {

  // Clean up after each test case
  afterEach(cleanup);

  // Test case to check if the ExampleComponent renders with correct title prop
  test('renders with correct title', () => {
    const title = 'Test Title';
    const { getByTestId } = render(<ExampleComponent title={title} />);
    expect(getByTestId('example-component')).toHaveTextContent(title);
  });

  // Test case to check if the ExampleComponent triggers callback on a button click
  test('button click triggers callback', () => {
    const mockCallback = jest.fn();
    const { getByTestId } = render(<ExampleComponent onButtonClick={mockCallback} />);
    fireEvent.click(getByTestId('example-button'));
    expect(mockCallback).toHaveBeenCalledTimes(1);
  });

  // Further tests can include error handling, checking default props, lifecycle methods, etc.

});

