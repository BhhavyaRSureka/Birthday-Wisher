// ********RoostGPT********
// Test generated by RoostGPT for test ReactTesting using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
// src/__tests__/src/Generate.test.jsx

import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import Generate from '../../Generate.jsx';

describe('Generate Component', () => {
  test('renders Generate component', () => {
    render(<Generate />);
    expect(screen.getByText('Generate Here')).toBeInTheDocument();
  });

  test('allows the user to enter a name', () => {
    render(<Generate />);
    const nameInput = screen.getByPlaceholderText('Enter Name');
    fireEvent.change(nameInput, { target: { value: 'Jane' } });
    expect(nameInput.value).toBe('Jane');
  });

  test('generates correct link on clicking generate', () => {
    render(<Generate />);
    const nameInput = screen.getByPlaceholderText('Enter Name');
    const dayInput = screen.getByPlaceholderText('Enter Day');
    const monthSelect = screen.getByText('Select Month').closest('select');

    // Simulate user entering name, day, and selecting a month
    fireEvent.change(nameInput, { target: { value: 'Jane' } });
    fireEvent.change(dayInput, { target: { value: '15' } });
    fireEvent.change(monthSelect, { target: { value: '6' } });

    // Simulate clicking the generate button
    const generateButton = screen.getByText('Generate');
    fireEvent.click(generateButton);

    // Assert the link is generated correctly
    expect(screen.getByText('Link has been generated')).toBeInTheDocument();
    expect(screen.getByTestId('generatedLink').href).toBe('https://birthday-wisher.netlify.app/birthday/Jane/15/6');
  });

  // Additional tests for edge cases and error handling can be written here
});

